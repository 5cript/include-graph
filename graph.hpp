#pragma once

#include <string>
#include <iostream>

#include <boost/graph/adjacency_list.hpp>

struct Edge
{
};

struct Vertex
{
    std::string path;
    std::string file;
    boost::graph_traits<boost::adjacency_list<boost::listS, boost::vecS, boost::directedS, Vertex, Edge>>::vertex_descriptor descriptor;
    boost::graph_traits<boost::adjacency_list<boost::listS, boost::vecS, boost::directedS, Vertex, Edge>>::vertex_descriptor parent;
    int level;
};

class Graph
{
public:
    using graph_type = boost::adjacency_list<boost::listS, boost::vecS, boost::directedS, Vertex, Edge>;
    using vertex_descriptor = boost::graph_traits<graph_type>::vertex_descriptor;
    using vertex_iterator =  boost::graph_traits <graph_type>::vertex_iterator;

public:
    /**
     *  Load graph
     *
     *  @param file A file generated by g++ -H.
     *  @param blacklist A file name blacklist.
     */
    void loadFromFile(std::string const& file, std::vector <std::string> const& blacklist = {});

    /**
     *  A stream containing stuff generated by g++ -H.
     */
    void loadFromStream(std::istream& stream, std::vector <std::string> const& blacklist = {});

    /**
     *  Create a graphviz dot file.
     */
    void toDotFile(std::string const& fileName);

private:
    graph_type graph_;
};
